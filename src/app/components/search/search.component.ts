import {Component, EventEmitter, Output} from '@angular/core';
import {AuthService} from "../../service/auth.service";
import {UserService} from "../../service/user-service.service";
import {CarService} from "../../service/car.service";
import {FormBuilder, FormGroup, Validators} from "@angular/forms";

@Component({
  selector: 'app-search',
  templateUrl: './search.component.html',
  styleUrls: ['./search.component.css']
})
export class SearchComponent {
  @Output() searchEvent = new EventEmitter<string>();
  @Output() createNewCarEvent = new EventEmitter<void>();
  carForm!: FormGroup;

  constructor(private authService: AuthService, private userService: UserService, private carService: CarService, private formBuilder: FormBuilder) {
    this.carForm = this.formBuilder.group({
      carId: [null], // Assuming it's generated by the backend or not needed for new cars
      carName: ['', Validators.required],
      description: [''],
      carModelYear: ['', Validators.required],
      carBrand: ['', Validators.required],
      color: [''],
      capacity: ['', Validators.required],
      plateNumber: ['', Validators.required],
      rate: ['', Validators.required],
      carStatus: ['', Validators.required],
      createdDate: [{value: '', disabled: true}], // assuming these are set by the backend
      lastModified: [{value: '', disabled: true}],
      createdBy: [{value: '', disabled: true}], // assuming these are set by the backend
      lastModifiedBy: [{value: '', disabled: true}]
    });
  }

  // Method to emit the event
  onSearch(term: string) {
    this.searchEvent.emit(term);
  }

  createNewCar() {
    this.createNewCarEvent.emit();
  }

  handleSearch(searchTerm: string) {
    // Implement your search logic here
    // For example, filter the car list based on the searchTerm
  }
}
