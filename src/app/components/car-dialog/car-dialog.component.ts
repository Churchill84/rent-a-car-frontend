import {Component, EventEmitter, Input, Output} from '@angular/core';
import {FormBuilder, FormGroup, Validators} from "@angular/forms";
import {CarStatus} from "../../model/car-status";

@Component({
  selector: 'app-car-dialog',
  templateUrl: './car-dialog.component.html',
  styleUrls: ['./car-dialog.component.css']
})
export class CarDialogComponent {
  @Input() carForm!: FormGroup;
  @Output() formSubmit = new EventEmitter<any>();
  @Output() close = new EventEmitter<void>();
  protected readonly CarStatus = CarStatus;
  selectedFile: File | null = null;
  imageURL: string | null = null;
  carDescription: string = "Description of the car";

  constructor(private formBuilder: FormBuilder) {
    this.createForm();
  }

  createForm() {
    this.carForm = this.formBuilder.group({
      carId: [null], // Assuming it's generated by the backend or not needed for new cars
      carName: ['', Validators.required],
      description: [''],
      carModelYear: ['', Validators.required],
      carBrand: ['', Validators.required],
      color: [''],
      capacity: ['', Validators.required],
      plateNumber: ['', Validators.required],
      rate: ['', Validators.required],
      carStatus: ['', Validators.required],
      createdDate: [{value: '', disabled: true}], // assuming these are set by the backend
      lastModified: [{value: '', disabled: true}],
      createdBy: [{value: '', disabled: true}], // assuming these are set by the backend
      lastModifiedBy: [{value: '', disabled: true}],
      imageURL: ['', Validators.required]
    });
    this.selectedFile = null; // Reset selected file
  }

  onFileSelected(event: Event) {
    const element = event.currentTarget as HTMLInputElement;
    let fileList: FileList | null = element.files;
    if (fileList) {
      this.selectedFile = fileList[0];
      this.imageURL = URL.createObjectURL(this.selectedFile);
    }
  }


  onSubmitCarForm() {
    const formData = new FormData();

    // Append all form fields to formData
    Object.keys(this.carForm.controls).forEach(key => {
      if (this.carForm.get(key)?.value) {
        formData.append(key, this.carForm.get(key)?.value);
      }
    });

    // Append the selected file to formData
    if (this.selectedFile) {
      formData.append('carImage', this.selectedFile, this.selectedFile.name);
    }

    // Emit the formData
    this.formSubmit.emit(formData);
  }

  closeCarForm() {
    this.imageURL = null;
    this.resetForm();
    this.close.emit();
  }

  resetForm() {
    this.createForm();
  }
}
