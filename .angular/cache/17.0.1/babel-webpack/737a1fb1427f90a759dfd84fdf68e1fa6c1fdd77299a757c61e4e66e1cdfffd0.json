{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./service/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuardService {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.authGuard = (route, state) => {\n      if (this.authService.isLoggedIn()) {\n        return true;\n      }\n      this.router.navigate(['/login']);\n      return false;\n    };\n  }\n  static #_ = this.ɵfac = function AuthGuardService_Factory(t) {\n    return new (t || AuthGuardService)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuardService,\n    factory: AuthGuardService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthGuardService","constructor","authService","router","authGuard","route","state","isLoggedIn","navigate","_","i0","ɵɵinject","i1","AuthService","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\DRAGISA\\projects\\rent-a-car\\rent-a-car-frontend\\src\\app\\auth.guard.ts"],"sourcesContent":["import {CanActivateFn, Router} from '@angular/router';\nimport {Injectable} from \"@angular/core\";\nimport {AuthService} from \"./service/auth.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  authGuard: CanActivateFn = (route, state) => {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    }\n    this.router.navigate(['/login']);\n    return false;\n  };\n}\n"],"mappings":";;;AAOA,OAAM,MAAOA,gBAAgB;EAC3BC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAE5D,KAAAC,SAAS,GAAkB,CAACC,KAAK,EAAEC,KAAK,KAAI;MAC1C,IAAI,IAAI,CAACJ,WAAW,CAACK,UAAU,EAAE,EAAE;QACjC,OAAO,IAAI;;MAEb,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAO,KAAK;IACd,CAAC;EARsE;EAAC,QAAAC,CAAA,G;qBAD7DT,gBAAgB,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAhBhB,gBAAgB;IAAAiB,OAAA,EAAhBjB,gBAAgB,CAAAkB,IAAA;IAAAC,UAAA,EAFf;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}