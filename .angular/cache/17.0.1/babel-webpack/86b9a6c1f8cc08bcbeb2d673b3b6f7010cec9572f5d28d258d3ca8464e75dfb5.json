{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/auth.service\";\nimport * as i2 from \"../../service/user-service.service\";\nimport * as i3 from \"../../service/car.service\";\nimport * as i4 from \"@angular/forms\";\nexport class SearchComponent {\n  constructor(authService, userService, carService, formBuilder) {\n    this.authService = authService;\n    this.userService = userService;\n    this.carService = carService;\n    this.formBuilder = formBuilder;\n    this.searchEvent = new EventEmitter();\n    this.createNewCarEvent = new EventEmitter();\n    this.carForm = this.formBuilder.group({\n      carId: [null],\n      carName: ['', Validators.required],\n      description: [''],\n      carModelYear: ['', Validators.required],\n      carBrand: ['', Validators.required],\n      color: [''],\n      capacity: ['', Validators.required],\n      plateNumber: ['', Validators.required],\n      rate: ['', Validators.required],\n      carStatus: ['', Validators.required],\n      createdDate: [{\n        value: '',\n        disabled: true\n      }],\n      lastModified: [{\n        value: '',\n        disabled: true\n      }],\n      createdBy: [{\n        value: '',\n        disabled: true\n      }],\n      lastModifiedBy: [{\n        value: '',\n        disabled: true\n      }]\n    });\n  }\n  // Method to emit the event\n  onSearch(term) {\n    this.searchEvent.emit(term);\n  }\n  createNewCar() {\n    this.createNewCarEvent.emit();\n  }\n  handleSearch(searchTerm) {\n    // Implement your search logic here\n    // For example, filter the car list based on the searchTerm\n  }\n  static #_ = this.ɵfac = function SearchComponent_Factory(t) {\n    return new (t || SearchComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.CarService), i0.ɵɵdirectiveInject(i4.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SearchComponent,\n    selectors: [[\"app-search\"]],\n    outputs: {\n      searchEvent: \"searchEvent\",\n      createNewCarEvent: \"createNewCarEvent\"\n    },\n    decls: 6,\n    vars: 0,\n    consts: [[1, \"search-component\"], [1, \"create-new-car-button\", 3, \"click\"], [\"type\", \"text\", \"placeholder\", \"Search cars...\", 1, \"search-input\"], [1, \"search-button\"]],\n    template: function SearchComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function SearchComponent_Template_button_click_1_listener() {\n          return ctx.createNewCar();\n        });\n        i0.ɵɵtext(2, \"Create New Car\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"input\", 2);\n        i0.ɵɵelementStart(4, \"button\", 3);\n        i0.ɵɵtext(5, \"Search\");\n        i0.ɵɵelementEnd()();\n      }\n    },\n    styles: [\"\\n\\n.search-component[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: flex-start;\\n  margin-bottom: 20px;\\n}\\n\\n\\n\\n.create-new-car-button[_ngcontent-%COMP%] {\\n  background-color: #007bff; \\n\\n  color: white;\\n  padding: 10px 15px;\\n  border: none;\\n  border-radius: 4px;\\n  margin-right: 10px; \\n\\n  cursor: pointer;\\n  transition: background-color 0.2s;\\n}\\n\\n.create-new-car-button[_ngcontent-%COMP%]:hover {\\n  background-color: #0056b3; \\n\\n}\\n\\n\\n\\n.search-input[_ngcontent-%COMP%] {\\n  flex-grow: 1; \\n\\n  padding: 10px;\\n  margin-right: 10px; \\n\\n  border: 1px solid #ccc;\\n  border-radius: 4px;\\n}\\n\\n\\n\\n.search-button[_ngcontent-%COMP%] {\\n  background-color: #28a745; \\n\\n  color: white;\\n  padding: 10px 15px;\\n  border: none;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  transition: background-color 0.2s;\\n}\\n\\n.search-button[_ngcontent-%COMP%]:hover {\\n  background-color: #218838; \\n\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9zZWFyY2gvc2VhcmNoLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsOENBQThDO0FBQzlDO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQiwyQkFBMkI7RUFDM0IsbUJBQW1CO0FBQ3JCOztBQUVBLDJDQUEyQztBQUMzQztFQUNFLHlCQUF5QixFQUFFLGVBQWU7RUFDMUMsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGtCQUFrQixFQUFFLGtEQUFrRDtFQUN0RSxlQUFlO0VBQ2YsaUNBQWlDO0FBQ25DOztBQUVBO0VBQ0UseUJBQXlCLEVBQUUseUJBQXlCO0FBQ3REOztBQUVBLGdDQUFnQztBQUNoQztFQUNFLFlBQVksRUFBRSw0QkFBNEI7RUFDMUMsYUFBYTtFQUNiLGtCQUFrQixFQUFFLHlEQUF5RDtFQUM3RSxzQkFBc0I7RUFDdEIsa0JBQWtCO0FBQ3BCOztBQUVBLGlDQUFpQztBQUNqQztFQUNFLHlCQUF5QixFQUFFLGdCQUFnQjtFQUMzQyxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLGlDQUFpQztBQUNuQzs7QUFFQTtFQUNFLHlCQUF5QixFQUFFLDBCQUEwQjtBQUN2RCIsInNvdXJjZXNDb250ZW50IjpbIi8qIFN0eWxlcyBmb3IgdGhlIHNlYXJjaCBjb21wb25lbnQgY29udGFpbmVyICovXHJcbi5zZWFyY2gtY29tcG9uZW50IHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbn1cclxuXHJcbi8qIFN0eWxlcyBmb3IgdGhlICdDcmVhdGUgTmV3IENhcicgYnV0dG9uICovXHJcbi5jcmVhdGUtbmV3LWNhci1idXR0b24ge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7IC8qIEJsdWUgY29sb3IgKi9cclxuICBjb2xvcjogd2hpdGU7XHJcbiAgcGFkZGluZzogMTBweCAxNXB4O1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4OyAvKiBTcGFjZSBiZXR3ZWVuIHRoZSBidXR0b24gYW5kIHRoZSBzZWFyY2ggaW5wdXQgKi9cclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjJzO1xyXG59XHJcblxyXG4uY3JlYXRlLW5ldy1jYXItYnV0dG9uOmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA1NmIzOyAvKiBEYXJrZXIgYmx1ZSBvbiBob3ZlciAqL1xyXG59XHJcblxyXG4vKiBTdHlsZXMgZm9yIHRoZSBzZWFyY2ggaW5wdXQgKi9cclxuLnNlYXJjaC1pbnB1dCB7XHJcbiAgZmxleC1ncm93OiAxOyAvKiBUYWtlIHVwIGF2YWlsYWJsZSBzcGFjZSAqL1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4OyAvKiBTcGFjZSBiZXR3ZWVuIHRoZSBzZWFyY2ggaW5wdXQgYW5kIHRoZSBzZWFyY2ggYnV0dG9uICovXHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbn1cclxuXHJcbi8qIFN0eWxlcyBmb3IgdGhlIHNlYXJjaCBidXR0b24gKi9cclxuLnNlYXJjaC1idXR0b24ge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMyOGE3NDU7IC8qIEdyZWVuIGNvbG9yICovXHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIHBhZGRpbmc6IDEwcHggMTVweDtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuMnM7XHJcbn1cclxuXHJcbi5zZWFyY2gtYnV0dG9uOmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjE4ODM4OyAvKiBEYXJrZXIgZ3JlZW4gb24gaG92ZXIgKi9cclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","Validators","SearchComponent","constructor","authService","userService","carService","formBuilder","searchEvent","createNewCarEvent","carForm","group","carId","carName","required","description","carModelYear","carBrand","color","capacity","plateNumber","rate","carStatus","createdDate","value","disabled","lastModified","createdBy","lastModifiedBy","onSearch","term","emit","createNewCar","handleSearch","searchTerm","_","i0","ɵɵdirectiveInject","i1","AuthService","i2","UserService","i3","CarService","i4","FormBuilder","_2","selectors","outputs","decls","vars","consts","template","SearchComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","SearchComponent_Template_button_click_1_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["C:\\Users\\DRAGISA\\projects\\rent-a-car\\rent-a-car-frontend\\src\\app\\components\\search\\search.component.ts","C:\\Users\\DRAGISA\\projects\\rent-a-car\\rent-a-car-frontend\\src\\app\\components\\search\\search.component.html"],"sourcesContent":["import {Component, EventEmitter, Output} from '@angular/core';\nimport {AuthService} from \"../../service/auth.service\";\nimport {UserService} from \"../../service/user-service.service\";\nimport {CarService} from \"../../service/car.service\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent {\n  @Output() searchEvent = new EventEmitter<string>();\n  @Output() createNewCarEvent = new EventEmitter<void>();\n  carForm!: FormGroup;\n\n  constructor(private authService: AuthService, private userService: UserService, private carService: CarService, private formBuilder: FormBuilder) {\n    this.carForm = this.formBuilder.group({\n      carId: [null], // Assuming it's generated by the backend or not needed for new cars\n      carName: ['', Validators.required],\n      description: [''],\n      carModelYear: ['', Validators.required],\n      carBrand: ['', Validators.required],\n      color: [''],\n      capacity: ['', Validators.required],\n      plateNumber: ['', Validators.required],\n      rate: ['', Validators.required],\n      carStatus: ['', Validators.required],\n      createdDate: [{value: '', disabled: true}], // assuming these are set by the backend\n      lastModified: [{value: '', disabled: true}],\n      createdBy: [{value: '', disabled: true}], // assuming these are set by the backend\n      lastModifiedBy: [{value: '', disabled: true}]\n    });\n  }\n\n  // Method to emit the event\n  onSearch(term: string) {\n    this.searchEvent.emit(term);\n  }\n\n  createNewCar() {\n    this.createNewCarEvent.emit();\n  }\n\n  handleSearch(searchTerm: string) {\n    // Implement your search logic here\n    // For example, filter the car list based on the searchTerm\n  }\n}\n","<!-- search.component.html -->\n<div class=\"search-component\">\n  <button class=\"create-new-car-button\" (click)=\"createNewCar()\">Create New Car</button>\n  <input type=\"text\" class=\"search-input\" placeholder=\"Search cars...\">\n  <button class=\"search-button\">Search</button>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}