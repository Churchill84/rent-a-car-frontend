{"ast":null,"code":"import { map } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api/v1/users';\n  }\n  getUserByEmail(email) {\n    return this.http.get(`${this.apiUrl}/${email}`).pipe(map(response => response._embedded.user) // map the response to the carList array\n    );\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["map","UserService","constructor","http","apiUrl","getUserByEmail","email","get","pipe","response","_embedded","user","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\DRAGISA\\projects\\rent-a-car\\rent-a-car-frontend\\src\\app\\service\\user-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {CarResponse} from \"../model/car\";\nimport {map} from \"rxjs/operators\";\nimport {UserResponse} from \"../model/user\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private apiUrl = 'http://localhost:8080/api/v1/users';\n\n  constructor(private http: HttpClient) {}\n\n  getUserByEmail(email: string): Observable<any> {\n    return this.http.get<UserResponse>(`${this.apiUrl}/${email}`).pipe(\n        map(response => response._embedded.user) // map the response to the carList array\n    );\n  }\n}\n"],"mappings":"AAIA,SAAQA,GAAG,QAAO,gBAAgB;;;AAMlC,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,oCAAoC;EAEd;EAEvCC,cAAcA,CAACC,KAAa;IAC1B,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAe,GAAG,IAAI,CAACH,MAAM,IAAIE,KAAK,EAAE,CAAC,CAACE,IAAI,CAC9DR,GAAG,CAACS,QAAQ,IAAIA,QAAQ,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;KAC5C;EACH;EAAC,QAAAC,CAAA,G;qBATUX,WAAW,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXhB,WAAW;IAAAiB,OAAA,EAAXjB,WAAW,CAAAkB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}